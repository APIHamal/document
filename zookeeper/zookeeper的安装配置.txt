#####ZooKeeper常用的基础命令
1)zkServer.sh start|stop
  启用当前的zk节点
  停止当前的zk节点
2)zkServer.sh status
  查看当前zk节点的状态
  standalone 表示当前是单节点zk的状态
  leader     表示当前是zk集群中的领导者
  follower   表示当前是zk集群中的跟随者
  observer   表示当前是zk集群中的观察者
3)zkCli.sh -server host:port
  该命令用于连接指定的zk服务器
  如果未指定-server选项则默认连接本地的zk服务器并且默认端口2181
  例如:zkCli.sh
  ##等同命令:zkCli.sh -server 127.0.0.1:2181
  
#####ZooKeeper安装过程
1)zooKeeper使用java进行因此必须先安装jre或者jdk环境并且设置
  java环境变量
2)将zk安装文件解压到合适的目录中
3)zk解压目录中bin为相关的脚本文件conf为zk的配置文件目录
  ##zkServer.sh start|stop 该脚本用于启动或者停止zk服务
  ##zkCli.sh 该脚本用于连接本地的zk的服务器
3)默认情况下conf中zoo_simple.cfg为zk提供的一个默认配置的
  示例文件正式配置时需要重命名该文件
  ##mv zoo_simple.cfg zoo.cfg
4)conf/zoo.cfg中需要修改dataDir配置选项
  该属性是配置存储持久化节点信息等文件的存放位置
  例如:
  ##dataDir=/usr/local/apache-zookeeper-3.5.9/data
  通常应该保证该目录对于zk服务拥有可写权限
5)配置完成clientPort(客户端连接zk端口)dataDir等属性后可以启动zk服务
  ##zkServer.sh start
  
#####ZooKeeper集群搭建
1)zk集群搭建过程存在3种zk节点角色
  ##leader(领导者)zk所有的事务操作(简单来说就是增删改操作)全部由领导者
    节点来操作因此如果一个跟随者(follower)或者观察者(observer)接收到一
	个事务请求则其自身并不会处理而是将该请求转发到领导者进行处理领导者
	处理完成后会将请求结果转发给该节点从而该节点再返回给客户端
  ##follower(跟随者)跟随者节点接收领导者节点的命令并且处理非事务请求(
    非事务请求简单来说就是读的相关操作)并且当leader节点出现宕机等异常
	情况时会进行选举参与投票重新选择出一个leader节点进行处理
  ##observer(观察者节点)observer与follower节点类似都可以处理非事务请求
    但是最大的区别是follower可以参与投票进行zk集群的选举操作但是observer
	不参与投票与选举操作仅仅是为了处理读操作(observer的作用其实就是为了
	增加zk集群的读能力分摊节点的读压力)
2)zk集群搭建时每个节点必须设置一个唯一的在集群中不重复的ID值以来标示节点
  因此搭建集群时需要在conf/dataDir属性指定的目录中创建一个至少节点ID的文件
  文件名称myid(zk规定文件名是myid)并且在该文件中写入一个整型数字(该数字不
  是必须连续)来表明当前节点的ID值
  ##例如:echo 100 >> myid
  表示当前节点的ID为100
3)zk集群中每个节点都需要感知其他节点的存在因此需要在conf/zoo.cfg文件中配置
  集群中节点的信息
  server.myid=ip:data_port:tp_port
  ##myid即为步骤(2)中配置的节点的ID(即myid文件中的值每个节点不重复)
  ##ip即为zk集群中节点的ip地址
  ##data_port为zk集群中其他节点与当前节点进行数据交换(例如节点信息复制)
    使用的端口号(该端口可以随意指定但是保证在宿主机上不重复并且可用)
  ##tp_port为zk集群中其他节点与当前机器交换选举投票信息时使用的端口号(
    与data_port相同可以随意指定但是要保证在宿主机上不重复且可用)
  例如:
	server.1=192.168.168.168:2888:3888
	server.2=192.168.168.169:2888:3888
	server.3=192.168.168.170:2888:3888
  ##配置了包含3个zk节点的zk集群的配置
4)使用zkServer.sh启动整个zk集群
  注意:zk集群保证只要存在超过半数以上的节点正常运行则整个zk集群正常运行因此
  例如:
	搭建3台zk节点的集群允许1台zk节点宕机
	搭建5太zk节点的集群允许2台zk节点宕机
  ##可以看出组成zk集群的节点数量越多则zk集群的可用性越高但是并不能一味的增加
	节点的数量因此zk节点数量的越多整个zk同步数据所需要的事件则更多
	###因此一般建议5台数量的zk节点即可
	###节点数量越多则整个zk集群同步数据所需要的事件则越久!!!!!!!!!!!!!!!!!!!
5)zk集群启动过程中由于是逐个启动节点由于conf/zoo.cfg中配置了server信息
  因此在未达到半数节点已经启动时则可能zk服务处于不可用的状态
  ##zkServer.sh status 该命令可以查看当前zk节点的状态
  
  
  