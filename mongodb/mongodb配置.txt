#配置mongodb的进程管理方式
processManagement:
   fork: true #fork为true表示mongodb将以守护进程(daemon)的方式运行
   pidFilePath: /var/log/mongodb/mongo.pid #设置mongodb存放其进程PID文件的位置
#配置mongodb的网络配置
net:
   #bindIp配置mongodb的监听IP地址(0.0.0.0表示监听所有的网卡IP)
   bindIp: 0.0.0.0
   #配置mongodb的监听端口(27017为默认的监听端口)
   port: 27017
   #wireObjectCheck开启mongodb数据写入校验[mongodb收到请求会先进行校验拒绝畸形或者无效的BSON数据写入]
   wireObjectCheck: true
#配置mongodb的数据存放的位置
storage:
   #指定MongoDB将存储其数据文件的位置
   dbPath: /var/lib/mongodb/data
   #指定当前mongodb使用的存储引擎
   engine: wiredTiger
   #控制引擎执行checkPoint操作的时间间隔(可理解成刷新linux中页缓存到磁盘时间间隔s)
   syncPeriodSecs: 60(默认60s进行一次checkPoint操作)
   #设置是否启用journal日志的功能
   journal:
      enabled: true #journal相当于redo日志的作用崩溃是做故障恢复
	  commitIntervalMs: 100 #控制journal日志的刷盘间隔时间(默认是100ms)
#配置mongodb的日志数据相关
systemLog:
   #destination为file表示将日志信息输出到文件中
   #如果不配置此选项则mongodb会将消息输出到控制台中
   destination: file
   #path指定日志文件的位置
   path: /var/log/mongodb/mongod.log
   #logAppend默认为false(true表示追加日志默认情况下mongodb启动时会清除日志消息
   #设置为true后则会不断地将日志内容追加到文件中)
   #确保mongodb不会在服务器启动操作后覆盖现有的日志文件
   logAppend: true
#设置此选项以true启用MongoDB中的授权系统(首次登录时不应该设置此属性在创建授权用户
 再重新开启授权认证[db.auth(user,pwd)]进行授权认证)
security:
   authorization: enabled #开启mongodb的认证
   keyFile: /usr/local/mongodb-linux-x86_64-rhel70-4.2.15-rc0/conf/mongo.key #mongodb集群以及副本集之间通信的认证
   javascriptEnabled: false #关闭mongodb服务器端执行javascript脚本代码的功能
#设置当前mongodb副本集的名称该项配置在所有的副本集中必须全部相同
replication:
   replSetName: "mongodb_cluster"